{"version":3,"sources":["components/Context/index.js","WithAppContext.js","components/CameraSensor.js","components/CameraFeedback.js","components/CameraUI.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","React","createContext","Component","CameraSensor","props","videoOn","navigator","mediaDevices","getUserMedia","video","width","height","then","stream","videoTag","current","srcObject","setState","catch","console","log","takeSnapshot","canvas","currComponent","img","document","querySelector","createElement","offsetWidth","offsetHeight","snapShotReview","getContext","drawImage","src","toDataURL","appendChild","getAttribute","Quagga","init","inputStream","name","type","target","constraints","facingMode","decoder","readers","debug","showCanvas","showPatches","showFoundPatches","showSkeleton","showLabels","showPatchLabels","showRemainingPatchLabels","boxFromPatches","showTransformed","showTransformedBox","showBB","err","start","scannerIsRunning","onProcessed","result","drawingCtx","ctx","overlay","drawingCanvas","dom","undefined","boxes","clearRect","parseInt","filter","box","forEach","ImageDebug","drawPath","x","y","color","lineWidth","codeResult","code","line","onDetected","style","display","stop","videoOff","state","localstream","getTracks","videoStream","createRef","bind","className","id","ref","this","autoPlay","onClick","CameraFeedback","role","WithSensorContext","Consumer","context","CameraUI","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6c9e278d.chunk.js","sourcesContent":["import  React, { Component } from 'react';\n\nexport const AppContext = React.createContext('app');\n\nexport class AppProvider extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tcameraApproved:false,\n\t\t\tavailableDevices: [],\n\t\t\tactions:{\n\t\t\t\tgetAvailableDevices: this.getAvailableDevices,\n\t\t\t\tgetUserMedia: this.getUserMedia\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tgetAvailableDevices = () => {\n\n\t\tnavigator.mediaDevices.enumerateDevices()\n\t\t\t.then((stream)=>{\n\t\t\t\tconsole.log(stream);\n\t\t\t})\n\t\t\t.catch((err)=>{\n\t\t\t\tconsole.log(err);\n\n\t\t\t})\n\t}\n\n\tgetUserMedia = () => {\n\t\t//https://stackoverflow.com/questions/57095478/html5-getusermedia-cannot-set-property-srcobject-of-null\n\t\tconst mediaType = {video: { width: 1280, height: 720 }};\n\t\tnavigator.mediaDevices.getUserMedia(mediaType)\n\t\t\t.then(stream => this.videoTag.current.srcObject = stream)\n    \t\t.catch(console.log);\n\t}\n\n\n\n\n\n\trender(){\n\t\treturn(\n\t\t\t<AppContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tstate:this.state\n\t\t\t\t}}\n\t\t\t>{this.props.children}\n\t\t\t</AppContext.Provider>\n\t\t\t)\n\t}\n\n}\n","import React from 'react';\nimport { AppContext } from './components/Context';\n\nexport function WithAppContext(Component){\n\treturn function WrapperComponent(props) {\n        return (\n            <AppContext.Consumer>\n                {context => <Component {...props} context={context} />}\n            </AppContext.Consumer>\n        );\n    };\n}\n\n\n","import React from 'react';\nimport Quagga from 'quagga';\n\n\nclass CameraSensor extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tlocalstream: null,\n\t\t\tvideoStream: null,\n\t\t\tscannerIsRunning: false\n\t\t}\n\t\t// This sets up a spot for the triggered video stream to show\n\t\tthis.videoTag = React.createRef()\n\t\tthis.takeSnapshot = this.takeSnapshot.bind(this);\n\t}\n\n\t/**\n\t * videoOn\n\t * Grab the camera stream\n\t */\n\tvideoOn = () =>{\n\t\tconst mediaType = {video: { width: 1280, height: 720 }}; // Preferred capture size\n\t\t\n\t\t// Get user media is the HTML5 api that lets us use the camera\n\t\tnavigator.mediaDevices.getUserMedia(mediaType)\n\t\t\t.then(stream => {\n\t\t\t\t\tthis.videoTag.current.srcObject = stream\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t'localstream': stream,\n\t\t\t\t\t});\n\t\t\t\t})\n    \t\t.catch(console.log);\n\t}\n\n\n\t/**\n\t * takeSnapshot\n\t * Renders screencap from video stream to page\n\t */\n\ttakeSnapshot = () => {\n\t\tconst currComponent = this;\n\t\t\n\t\t// https://gist.github.com/anantn/1852070\n\t\tconst img = document.querySelector('img') || document.createElement('img');\n\t\tconst video = document.querySelector('video');\n\t\tconst width = video.offsetWidth\n\t\tconst height = video.offsetHeight;\n\t\tlet imgResult = null;\n\n       \tconst snapShotReview = document.querySelector('.snapshot');\n\t\tlet canvas;\n\t\t canvas = canvas || document.createElement('canvas');\n\t\tcanvas.width = width;\n\t\tcanvas.height = height;\n\n\t\tconst context = canvas.getContext('2d');\n\t\tcontext.drawImage(video, 0, 0, width, height);\n\n\t\timg.src = canvas.toDataURL('image/jpeg', 1.0);\n\t\t\n\t\tsnapShotReview.appendChild(img);\t\n\t\t\n\t\timgResult = img.getAttribute('src');\n\t \n\t\t // console.log(img.getAttribute('src'));\n\t\t  \n\n\t\t// TO DO Break Quagga functionality into it's own method once we know it works\n\n\t\t\n\t\t\t\tQuagga.init({\n\t\t\t\t\tinputStream: {\n\t\t\t\t\t\tname: \"Live\",\n\t\t\t\t\t\ttype: \"LiveStream\",\n\t\t\t\t\t\ttarget: document.querySelector('#scanner-container'),\n\t\t\t\t\t\tconstraints: {\n\t\t\t\t\t\t\twidth: 480,\n\t\t\t\t\t\t\theight: 320,\n\t\t\t\t\t\t\tfacingMode: \"environment\"\n\t\t\t\t\t\t},\n\t\t\t\t\t},\n\t\t\t\t\tdecoder: {\n\t\t\t\t\t\treaders: [\n\t\t\t\t\t\t\t\"code_128_reader\",\n\t\t\t\t\t\t\t\"ean_reader\",\n\t\t\t\t\t\t\t\"ean_8_reader\",\n\t\t\t\t\t\t\t\"code_39_reader\",\n\t\t\t\t\t\t\t\"code_39_vin_reader\",\n\t\t\t\t\t\t\t\"codabar_reader\",\n\t\t\t\t\t\t\t\"upc_reader\",\n\t\t\t\t\t\t\t\"upc_e_reader\",\n\t\t\t\t\t\t\t\"i2of5_reader\"\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdebug: {\n\t\t\t\t\t\t\tshowCanvas: true,\n\t\t\t\t\t\t\tshowPatches: true,\n\t\t\t\t\t\t\tshowFoundPatches: true,\n\t\t\t\t\t\t\tshowSkeleton: true,\n\t\t\t\t\t\t\tshowLabels: true,\n\t\t\t\t\t\t\tshowPatchLabels: true,\n\t\t\t\t\t\t\tshowRemainingPatchLabels: true,\n\t\t\t\t\t\t\tboxFromPatches: {\n\t\t\t\t\t\t\t\tshowTransformed: true,\n\t\t\t\t\t\t\t\tshowTransformedBox: true,\n\t\t\t\t\t\t\t\tshowBB: true\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\n\t\t\t\t}, function (err) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.log(err);\n\t\t\t\t\t\treturn\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconsole.log(\"Initialization finished. Ready to start\");\n\t\t\t\t\tQuagga.start();\n\t\n\t\t\t\t\t// Set flag to is running\n\t\t\t\t\tcurrComponent.setState({\n\t\t\t\t\t\tscannerIsRunning:true\n\t\t\t\t\t});\n\t\t\t\t});\n\t\n\t\t\t\tQuagga.onProcessed(function (result) {\n\t\t\t\t\t//console.log('does this ever fire'); //loop\n\t\t\t\t\tvar drawingCtx = Quagga.canvas.ctx.overlay,\n\t\t\t\t\tdrawingCanvas = Quagga.canvas.dom.overlay;\n\t\t\t\t\t//console.log(result);\n\t\t\t\t\tif (result !== undefined) {\n\t\t\t\t\t\tif (result.boxes) {\n\t\t\t\t\t\t\tdrawingCtx.clearRect(0, 0, parseInt(drawingCanvas.getAttribute(\"width\")), parseInt(drawingCanvas.getAttribute(\"height\")));\n\t\t\t\t\t\t\tresult.boxes.filter(function (box) {\n\t\t\t\t\t\t\t\treturn box !== result.box;\n\t\t\t\t\t\t\t}).forEach(function (box) {\n\t\t\t\t\t\t\t\tQuagga.ImageDebug.drawPath(box, { x: 0, y: 1 }, drawingCtx, { color: \"green\", lineWidth: 2 });\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (result.box) {\n\t\t\t\t\t\t\t//console.log('resultbox', result.box);\n\t\t\t\t\t\t\tQuagga.ImageDebug.drawPath(result.box, { x: 0, y: 1 }, drawingCtx, { color: \"#00F\", lineWidth: 2 });\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (result.codeResult && result.codeResult.code) {\n\t\t\t\t\t\t\t//console.log('coderesult', result);\n\t\t\t\t\t\t\tQuagga.ImageDebug.drawPath(result.line, { x: 'x', y: 'y' }, drawingCtx, { color: 'red', lineWidth: 3 });\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\n\t\t\t\tQuagga.onDetected(function (result) {\n\t\t\t\t\tdocument.querySelector('.component--sensor').style.display = 'none';\n\t\t\t\t\tdocument.querySelector('.snapshot img').style.display = 'block';\n\t\t\t\t\t//console.log('how about does this ever fire');\n\t\t\t\t\tconsole.log(\"Barcode detected and processed : [\" + result.codeResult.code + \"]\", result);\n\t\t\t\t\tQuagga.stop();\n\t\t\t\t});\n\n\t}\n\n\n\t/**\n\t * videoOff\n\t * Turns off the camera\n\t */\n\tvideoOff = () => {\n\t\t  this.state.localstream.getTracks()[0].stop();\n\t\t  console.log(\"Vid off\");\n\n\n\t\t  //TO DO put quagga stop into dedicated method once we know it works\n\t\t  Quagga.stop();\n\t}\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"row\">\n\t\t\t\t<div className = \"col-6\">\n\t\t\t\t\t\n\t\t\t\t\t<div id=\"interactive\" className=\"viewport snapshot\">\n\t\t\t\t\t\t\n\t\t\t\t\t\t<video \n\t\t\t\t\t\t\t\tclassName=\"component--sensor\"\n\t\t\t\t\t\t\t\tref={this.videoTag}\n\t\t\t\t\t\t\t\tautoPlay\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<div className=\"imgSnapshot\"></div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className = \"col-8 mx-auto\">\n\t\t\t\t\t<button onClick={this.videoOn}>\n\t\t\t\t\t\tTurn on Camera\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button onClick={this.takeSnapshot}>\n\t\t\t\t\t\tTake snapshot\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button onClick={this.videoOff}>\n\t\t\t\t\t\tTurn off camera\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t)\n\t}\n}\n\nexport default CameraSensor;","import React from 'react';\n\nclass CameraFeedback extends React.Component{\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"alert alert-primary\" role=\"alert\">\n\t\t\t\tPlease allow the browser to user your camera\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default CameraFeedback;","import React from 'react';\nimport { WithAppContext } from '../WithAppContext';\nimport CameraSensor from './CameraSensor';\nimport CameraFeedback from './CameraFeedback';\n\nconst WithSensorContext = WithAppContext(CameraSensor);\n\n\n\n\nclass CameraUI extends React.Component{\n\n\n\trender(){\n\t\treturn(\n\t\t\t<div className=\"component--cameraui container\">\n\t\t\t\t\n\t\t\t\t\t<CameraFeedback />\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t<WithSensorContext />\n\t\t\t\t\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nexport default CameraUI;","import React from 'react';\nimport CameraUI from './components/CameraUI';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <CameraUI />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}